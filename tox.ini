# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, static-bundle

[vars]
tst_path = {toxinidir}/tests
all_path = {[vars]tst_path} {toxinidir}/render_bundle.py

[testenv]
basepython = python3
setenv =
  PYTHONPATH = {toxinidir}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  HOME
  PATH
  HTTP_PROXY
  HTTPS_PROXY
  NO_PROXY

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    ruff
commands =
    ruff --fix {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    ruff
    codespell
commands =
    codespell . --skip .git --skip .tox --skip build --skip lib --skip venv --skip .mypy_cache
    ruff {[vars]all_path}
    # Need to override ruff's default exclude patterns, which include '.tpl.py'
    ruff --exclude .terraform {[vars]tst_path}/load
    black --extend-exclude '/\.terraform/' --check --diff {[vars]all_path}

[testenv:static-{bundle,integration,load}]
description = Run static analysis checks
setenv =
    bundle: MYPYPATH = {toxinidir}/
    integration: MYPYPATH = {[vars]tst_path}/integration
    load: MYPYPATH = {[vars]tst_path}/load/gcp
deps =
    mypy
    types-dataclasses
    types-PyYAML
    types-setuptools
    types-toml
    bundle: jinja2
    integration: {[testenv:integration]deps}
    load: logfmter
    load: faker
    load: locust
commands =
    bundle: mypy {toxinidir}/render_bundle.py
    integration: mypy {[vars]tst_path}/integration
    # Need to pass the filename, otherwise mypy complains:
    # There are no .py[i] files in directory 'tests/load/gcp'
    load: mypy {[vars]tst_path}/load/gcp/loki-log-locustfile.tpl.py

[testenv:integration]
description = Run integration tests
deps =
    jinja2
    juju~=3.1.0  # must be compatible with the juju version installed by CI
    pytest
    pytest-operator
commands =
    pytest -vv --tb native --log-cli-level=INFO --color=yes -s {posargs} {[vars]tst_path}/integration

[testenv:e2e]
description = Run end-to-end tests
deps =
    jinja2
    juju~=3.1.0  # must be compatible with the juju version installed by CI
    pytest
    pytest-operator
passenv =
    K8S_CONTROLLER
    LXD_CONTROLLER
allowlist_externals =
    sh
commands =
    sh -c 'if [ -z "$K8S_CONTROLLER" ]; then echo "The K8S_CONTROLLER variable must be set."; exit 1; fi'
    sh -c 'if [ -z "$LXD_CONTROLLER" ]; then echo "The LXD_CONTROLLER variable must be set."; exit 1; fi'
    pytest -vv --tb native --log-cli-level=INFO --color=yes -s {posargs} {[vars]tst_path}/e2e

[testenv:render-{edge,beta,candidate,stable}]
description = Render the bundle from template
deps =
    jinja2
allowlist_externals =
    /usr/bin/env
commands =
    edge: /usr/bin/env python3 {toxinidir}/render_bundle.py {toxinidir}/bundle.yaml --channel=edge
    beta: /usr/bin/env python3 {toxinidir}/render_bundle.py {toxinidir}/bundle.yaml --channel=beta
    candidate: /usr/bin/env python3 {toxinidir}/render_bundle.py {toxinidir}/bundle.yaml --channel=candidate
    stable: /usr/bin/env python3 {toxinidir}/render_bundle.py {toxinidir}/bundle.yaml --channel=stable

[testenv:datasheet]
description = Plot load test results
deps =
    numpy
    matplotlib
    pandas
    scipy
commands =
    python {toxinidir}/tests/load/gcp/plot.py
