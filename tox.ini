# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, static

[vars]
tst_path = {toxinidir}/tests/
all_path = {[vars]tst_path}

[testenv]
basepython = python3
setenv =
  PYTHONPATH = {toxinidir}
  PYTHONBREAKPOINT=ipdb.set_trace
passenv =
  PYTHONPATH
  HOME
  PATH
  HTTP_PROXY
  HTTPS_PROXY
  NO_PROXY

[testenv:render]
description = Render a charm bundle from the Jinja template
deps =
    jinja2
commands =
    ./render_bundle.py cos-lite.yaml

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8 < 5
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
    codespell
commands =
    codespell . --skip .git --skip .tox --skip build --skip lib --skip venv --skip .mypy_cache
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:static]
description = Run static analysis checks
deps =
    mypy
    pytest
    pytest-operator==1.0.0b1
    juju
    types-setuptools
    types-toml
commands =
    mypy {[vars]all_path} {posargs}

[testenv:integration]
description = Run integration tests
deps =
    jinja2
    juju
    pytest
    git+https://github.com/charmed-kubernetes/pytest-operator.git
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {toxinidir}/tests/integration

[testenv:render-{edge,beta,candidate,stable}]
description = Render the bundle from template
deps =
    jinja2
allowlist_externals =
    /usr/bin/env
commands =
    edge: /usr/bin/env python3 {toxinidir}/render_bundle.py {toxinidir}/bundle.yaml --channel=edge
    beta: /usr/bin/env python3 {toxinidir}/render_bundle.py {toxinidir}/bundle.yaml --channel=beta
    candidate: /usr/bin/env python3 {toxinidir}/render_bundle.py {toxinidir}/bundle.yaml --channel=candidate
    stable: /usr/bin/env python3 {toxinidir}/render_bundle.py {toxinidir}/bundle.yaml --channel=stable
