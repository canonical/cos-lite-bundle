name: Periodic integration matrix tests

on:
  schedule:
    # every Wednesday at 23:00
    - cron: '0 02 * * WED'
  workflow_dispatch:


jobs:
  integration-matrix:
    name: Matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        charm-channel: [ "edge", "beta", "candidate", "stable" ]
        juju-track: [ "3.1", "3.2", "4.0" ]
        microk8s-channel: [ "1.25-strict/stable" ]
        include:
          - juju-track: "3.1"
            juju-channel: "3.1/stable"
            juju-agent-version: "3.1.5"
          - juju-track: "3.2"
            juju-channel: "3.2/stable"
            juju-agent-version: "3.2.0"
          - juju-track: "4.0"
            juju-channel: "4.0/beta"
            juju-agent-version: "4.0-beta1"
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Get prefsrc
      run: |
        echo "IPADDR=$(ip -4 -j route get 2.2.2.2 | jq -r '.[] | .prefsrc')" >> $GITHUB_ENV
    - name: Setup operator environment
      uses: charmed-kubernetes/actions-operator@main
      with:
        juju-channel: ${{ matrix.juju-channel }}
        provider: microk8s
        channel: ${{ matrix.microk8s-channel }}
        microk8s-addons: "hostpath-storage dns metallb:${{ env.IPADDR }}-${{ env.IPADDR }}"
        bootstrap-options: "--agent-version ${{ matrix.juju-agent-version }}"
    - name: Update python-libjuju dependency to match juju version
      # Assuming the dep is given on a separate tox.ini line
      run: sed -E -i 's/^\s*juju\s*~=.+/    juju~=${{ matrix.juju-track }}.0/g' tox.ini
    - name: Run tests (${{ matrix.charm-channel }} charms, juju ${{ matrix.juju-channel }}, microk8s ${{ matrix.microk8s-channel }})
      run: tox -e integration -- --channel=${{ matrix.charm-channel }}
    - name: Dump debug log
      if: failure()
      run: for m in $(juju models --format json | jq -r '.models[].name' | grep -v "admin/controller"); do juju debug-log -m $m --replay --ms --no-tail; done
      shell: bash
    - name: Dump charmcraft logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: charmcraft-logs
        path: ~/.local/state/charmcraft/log/*.log
    - name: Dump deployments
      if: failure()
      run: kubectl describe deployments -A
    - name: Dump replicasets
      if: failure()
      run: kubectl describe replicasets -A
    - name: Dump pods and their logs
      if: failure()
      shell: bash
      run: |
        juju status --relations --storage
        kubectl get pods \
            -A \
            -o=jsonpath='{range.items[*]}{.metadata.namespace} {.metadata.name}{"\n"}' \
            --sort-by=.metadata.namespace \
            | grep -v "^\s*$" \
            | while read namespace pod; do \
                 kubectl -n $namespace describe pod $pod; \
                 kubectl -n $namespace logs $pod \
                    --all-containers=true \
                    --tail=100; \
             done
