#cloud-config

write_files:
- path: /run/prom-ingress.yaml
  content: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: prom-ingress
      namespace: lma-load-test
      annotations:
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/rewrite-target: /$1
    spec:
      ingressClassName: public
      rules:
      - http:
          paths:
          - path: /prom/(.*)
            pathType: Prefix
            backend:
              service:
                name: prometheus
                port:
                  number: 9090
          - path: /loki/(.*)
            pathType: Prefix
            backend:
              service:
                name: loki
                port:
                  number: 3100
- path: /run/overlay-load-test.yaml
  content: |
    --- # overlay.yaml
    applications:
      scrape-target:
        charm: prometheus-scrape-target-k8s
        scale: 1
        trust: true
        channel: edge
        options:
          targets: ${join(",", [for port in PORTS: "${AVALANCHE_URL}:${port}"])}
      scrape-config:
        charm: prometheus-scrape-config-k8s
        scale: 1
        trust: true
        channel: edge
        options:
          scrape-interval: ${SCRAPE_INTERVAL}s
          scrape-timeout: ${max(SCRAPE_INTERVAL - 1, 1)}s

    relations:
    - - scrape-target:metrics-endpoint
      - scrape-config:configurable-scrape-jobs
    - - scrape-config:metrics-endpoint
      - prometheus:metrics-endpoint

package_update: true

packages:
- python3-pip
- jq

snap:
  commands:
  - snap install --classic juju
  - snap install --classic microk8s
  - snap alias microk8s.kubectl kubectl

runcmd:
- |
  # disable swap
  sysctl vm.swappiness=0
  echo "vm.swappiness = 0" | tee -a /etc/sysctl.conf

- |
  # disable unnecessary services
  systemctl disable man-db.timer man-db.service --now
  systemctl disable apport.service apport-autoreport.service  --now
  systemctl disable apt-daily.service apt-daily.timer --now
  systemctl disable apt-daily-upgrade.service apt-daily-upgrade.timer --now
  systemctl disable unattended-upgrades.service --now
  systemctl disable motd-news.service motd-news.timer --now
  systemctl disable bluetooth.target --now
  systemctl disable ua-messaging.service ua-messaging.timer --now
  systemctl disable systemd-tmpfiles-clean.timer --now

- |
  # setup microk8s and bootstrap
  adduser ubuntu microk8s
  microk8s status --wait-ready
  microk8s enable dns:$(grep nameserver /run/systemd/resolve/resolv.conf | awk '{print $2}')
  microk8s.enable storage ingress
  # wait for addons to become available
  sh -c "until microk8s.kubectl rollout status deployments/hostpath-provisioner -n kube-system -w; do sleep 5; done"
  sh -c "until microk8s.kubectl rollout status deployments/coredns -n kube-system -w; do sleep 5; done"
  sh -c "until microk8s.kubectl rollout status daemonsets/nginx-ingress-microk8s-controller -n ingress -w; do sleep 5; done"

  # To prevent metallb from failing with the following error:
  # The connection to the server 127.0.0.1:16443 was refused - did you specify the right host or port?
  # the metallb addon must be enabled only after the dns addon was rolled out
  # https://github.com/ubuntu/microk8s/issues/2770#issuecomment-984346287
  IPADDR=$(ip -4 -j route | jq -r '.[] | select(.dst | contains("default")) | .prefsrc')
  microk8s.enable metallb:$IPADDR-$IPADDR
  sh -c "until microk8s.kubectl rollout status daemonset.apps/speaker -n metallb-system -w; do sleep 5; done"

  # workaround for
  # ERROR resolving microk8s credentials: max duration exceeded: secret for service account "juju-credential-microk8s" not found
  # Ref: https://github.com/charmed-kubernetes/actions-operator/blob/main/src/bootstrap/index.ts
  microk8s.kubectl create serviceaccount test-sa
  timeout 600 sh -c "until microk8s.kubectl get secrets | grep -q test-sa-token-; do sleep 5; done"
  microk8s.kubectl delete serviceaccount test-sa
  
- |
  # prep juju
  sudo -u ubuntu juju bootstrap --no-gui microk8s uk8s
  sudo -u ubuntu juju add-model --config logging-config="<root>=WARNING; unit=DEBUG" --config update-status-hook-interval="60m" lma-load-test
  sudo -u ubuntu juju deploy --channel=edge lma-light --trust --overlay /run/overlay-load-test.yaml --trust
  
- |
  # ingress must be applied _after_ deployment
  microk8s.kubectl apply -f /run/prom-ingress.yaml

- |
  # install ops agent for observability
  #echo '"projects/${PROJECT}/zones/${ZONE}/instances/${INSTANCE}","[{""type"":""ops-agent""}]"' >> agents_to_install.csv && \
  #curl -sSO https://dl.google.com/cloudagents/mass-provision-google-cloud-ops-agents.py && \
  #python3 mass-provision-google-cloud-ops-agents.py --file agents_to_install.csv
  curl -sSO https://dl.google.com/cloudagents/add-google-cloud-ops-agent-repo.sh
  sudo bash add-google-cloud-ops-agent-repo.sh --also-install

