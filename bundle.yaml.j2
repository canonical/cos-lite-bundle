---
{%- set testing = testing is defined and testing.casefold() in ["1", "yes", "true"] %}
bundle: kubernetes
name: cos-lite
description: >
  COS Lite is a light-weight, highly-integrated, observability stack running on Kubernetes
applications:
  traefik:
    charm: {{ traefik|default('traefik-k8s', true) }}
    scale: 1
    trust: true
    {%- if traefik is defined and traefik.endswith('.charm') %}
    resources:
        traefik-image: "jnsgruk/traefik"
    {%- else %}
    channel: {{ channel|default('edge', true) }}
    {%- endif %}
  alertmanager:
    charm: {{ alertmanager|default('alertmanager-k8s', true) }}
    scale: 1
    trust: true
    {%- if alertmanager is defined and alertmanager.endswith('.charm') %}
    resources:
        alertmanager-image: "ubuntu/prometheus-alertmanager"
    {%- else %}
    channel: {{ channel|default('edge', true) }}
    {%- endif %}
  prometheus:
    charm: {{ prometheus|default('prometheus-k8s', true) }}
    scale: 1
    trust: true
    {%- if prometheus is defined and prometheus.endswith('.charm') %}
    resources:
      prometheus-image: "ubuntu/prometheus:latest"
    {%- else %}
    channel: {{ channel|default('edge', true) }}
    {%- endif %}
  grafana:
    charm: {{ grafana|default('grafana-k8s', true) }}
    scale: 1
    trust: true
    {%- if grafana is defined and grafana.endswith('.charm') %}
    resources:
      grafana-image: "ubuntu/grafana:latest"
    {%- else %}
    channel: {{ channel|default('edge', true) }}
    {%- endif %}
  catalogue:
    charm: {{ catalogue|default('catalogue-k8s', true) }}
    scale: 1
    trust: true
    {%- if catalogue is defined and catalogue.endswith('.charm') %}
    resources:
      catalogue-image: "ghcr.io/canonical/catalogue-k8s"
    {%- else %}
    channel: {{ channel|default('edge', true) }}
    {%- endif %}
    options:
      title: Canonical Observability Stack
      tagline: Model-driven Observability Stack deployed with a single command.
      description: |
        Canonical Observability Stack Lite, or COS Lite, is a light-weight, highly-integrated, 
        Juju-based observability suite running on Kubernetes.
  loki:
    charm: {{ loki|default('loki-k8s', true) }}
    scale: 1
    trust: true
    {%- if loki is defined and loki.endswith('.charm') %}
    resources:
      loki-image: "grafana/loki"
    {%- else %}
    channel: {{ channel|default('edge', true) }}
    {%- endif %}
  {%- if testing %}
  avalanche:
    charm: {{ avalanche|default('avalanche-k8s', true) }}
    scale: 2
    trust: true
    {%- if avalanche is defined and avalanche.endswith('.charm') %}
    resources:
      avalanche-image: "quay.io/freshtracks.io/avalanche"
    {%- else %}
    channel: {{ channel|default('edge', true) }}
    {%- endif %}
    options:
      metric_count: 10
      series_count: 2
  {%- endif %}

relations:
- [traefik:ingress-per-unit, prometheus:ingress]
- [traefik:ingress-per-unit, loki:ingress]
- [prometheus:alertmanager, alertmanager:alerting]
- [grafana:grafana-source, prometheus:grafana-source]
- [grafana:grafana-source, loki:grafana-source]
- [grafana:grafana-source, alertmanager:grafana-source]
- [loki:alertmanager, alertmanager:alerting]
{% if testing -%}
- [prometheus:metrics-endpoint, avalanche:metrics-endpoint]
{% endif -%}
# COS-monitoring
- [traefik:metrics-endpoint, prometheus:metrics-endpoint]
- [alertmanager:self-metrics-endpoint, prometheus:metrics-endpoint]
- [loki:metrics-endpoint, prometheus:metrics-endpoint]
- [loki:grafana-dashboard, grafana:grafana-dashboard]
- [prometheus:grafana-dashboard, grafana:grafana-dashboard]
- [alertmanager:grafana-dashboard, grafana:grafana-dashboard]
# Service Catalogue
- [catalogue:ingress, traefik:ingress]
- [catalogue:catalogue, grafana:catalogue]
- [catalogue:catalogue, prometheus:catalogue]
- [catalogue:catalogue, alertmanager:catalogue]

{% if testing -%}
--- # overlay.yaml
applications:
  alertmanager:
    offers:
      alertmanager-karma-dashboard:
        endpoints:
          - karma-dashboard
  grafana:
    offers:
      grafana-dashboards:
        endpoints:
          - grafana-dashboard
  loki:
    offers:
      loki-logging:
        endpoints:
        - logging
  prometheus:
    offers:
      prometheus-scrape:
        endpoints:
        - metrics-endpoint
{% endif -%}
